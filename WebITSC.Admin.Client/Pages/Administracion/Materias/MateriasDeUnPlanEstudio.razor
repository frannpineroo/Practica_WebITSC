@page "/MateriasPlanEstudio"
@inject IHttpServicios http
@inject HttpClient http
@inject NavigationManager Navigation
@using System.Net.Http.Json
@using WebITSC.Shared.General.DTO
<h3>Materias en un Plan de Estudio</h3>

<EditForm Model="PlanEstudioDTO" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="CarreraId">Carrera</label>
        <InputSelect class="form-control" id="CarreraId" @bind-Value="PlanEstudioDTO.NombreCarrera">
            <option value="">Seleccione...</option>
            @foreach (var carrera in carreras)
            {
                <option value="@carrera.Id">@carrera.Nombre</option>
            }
        </InputSelect>
    </div>
    @*     <div class="form-group">
    <label for="Anno">Anno</label>
    <InputText class="form-control" id="PlanEstudioId" @bind-Value="PlanEstudioDTO.Anno" />
    </div>
    *@
    <button type="submit" class="btn btn-primary">Buscar Materias</button>
</EditForm>
@code {
    private GetByCarreraAnnoPlanEstudioDTO PlanEstudioDTO = new GetByCarreraAnnoPlanEstudioDTO();
    private List<Carrera> carreras = new List<Carrera>();
    private List<MateriaEnPlanEstudio> materias = new List<MateriaEnPlanEstudio>();

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        carreras = await http.GetFromJsonAsync<List<Carrera>>("api/Carreras");
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            // Enviar datos al backend para usar el controller
            var response = await http.GetAsync("api/MateriaEnPlanEstudio/GetId");

            if (response.IsSuccessStatusCode)
            {
                materias = await http.GetFromJsonAsync<List<MateriaEnPlanEstudio>>("api/MateriaEnPlanEstudio/GetId");
                // Redirigir a la lista de alumnos o a una página de éxito
                //Navigation.NavigateTo("/lista-alumnos");
            }
            else
            {
                // Manejar el error, por ejemplo, mostrar un mensaje de error
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            // Manejar el error de conexión o cualquier otra excepción
            Console.WriteLine($"Exception: {ex.Message}");
        }
    }
}
