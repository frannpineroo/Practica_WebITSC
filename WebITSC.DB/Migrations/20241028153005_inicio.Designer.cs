// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebITSC.DB.Data;

#nullable disable

namespace WebITSC.DB.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241028153005_inicio")]
    partial class inicio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Analitico")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CUIL")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CUS")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ConstanciaCUIL")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Departamento")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoCarnet")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FotocopiaDNI")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PartidaNacimiento")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TituloBase")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.CUPOF_Coordinador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CUPOF")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<int?>("CoordinadorId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Ocupado_Libre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sede")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.HasIndex("CoordinadorId");

                    b.ToTable("CUPOFs_Coordinador");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.CUPOF_Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CUPOF")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Ocupado_Libre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TurnoId");

                    b.ToTable("CUPOFs_Profesor");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DuracionCarrera")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Modalidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.CertificadoAlumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.ToTable("CertificadosAlumno");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Clase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TurnoId" }, "ClasesDeUnTurnoIDX");

                    b.HasIndex(new[] { "TurnoId", "Fecha" }, "Clases_UQ")
                        .IsUnique();

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.ClaseAsistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asistencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("ClaseId")
                        .HasColumnType("int");

                    b.Property<int>("CursadoMateriaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CursadoMateriaId" }, "AsistenciasDeAlumnoEnTurnoIDX");

                    b.HasIndex(new[] { "ClaseId" }, "AsistenciasDeUnaClaseIDX");

                    b.HasIndex(new[] { "Asistencia", "ClaseId" }, "FaltaronEstaClaseIDX");

                    b.ToTable("ClaseAsistencias");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Coordinador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Coordinadores");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Correlatividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MateriaCorrelativaId")
                        .HasColumnType("int");

                    b.Property<int>("MateriaEnPlanEstudioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MateriaCorrelativaId");

                    b.HasIndex("MateriaEnPlanEstudioId");

                    b.ToTable("Correlatividades");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.CursadoMateria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int");

                    b.Property<int>("Anno")
                        .HasColumnType("int");

                    b.Property<string>("CondicionActual")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VencimientoCondicion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("TurnoId");

                    b.ToTable("CursadosMateria");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Evaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Libro")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sede")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TipoEvaluacion")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TurnoId" }, "EvaluacionesDeUnTurnoIDX");

                    b.HasIndex(new[] { "TurnoId", "Fecha" }, "EvaluacionesEnFechaIDX");

                    b.HasIndex(new[] { "TurnoId", "TipoEvaluacion" }, "EvaluacionesTipoIDX");

                    b.ToTable("Evaluaciones");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.InscripcionCarrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int");

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<int>("Cohorte")
                        .HasColumnType("int");

                    b.Property<string>("EstadoAlumno")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Legajo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("LibroMatriz")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NroOrdenAlumno")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CarreraId", "Cohorte" }, "CohorteIDX");

                    b.HasIndex(new[] { "AlumnoId", "CarreraId", "Cohorte" }, "InscripcionCarrera_UQ")
                        .IsUnique();

                    b.ToTable("InscripcionesCarrera");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.MAB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CUPOF_ProfesorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdMab")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.Property<string>("SitRevista")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CUPOF_ProfesorId");

                    b.HasIndex("ProfesorId");

                    b.HasIndex(new[] { "IdMab" }, "MABUnico_UQ")
                        .IsUnique();

                    b.ToTable("MABs");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anno")
                        .HasColumnType("int");

                    b.Property<string>("Formacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ResolucionMinisterial")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nombre", "ResolucionMinisterial" }, "Materia_UQ")
                        .IsUnique();

                    b.HasIndex(new[] { "Nombre" }, "MateriasPorNombreIDX");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.MateriaEnPlanEstudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anno")
                        .HasColumnType("int");

                    b.Property<string>("Anual_Cuatrimestral")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("HrsCatedraSemanales")
                        .HasColumnType("int");

                    b.Property<int>("HrsRelojAnuales")
                        .HasColumnType("int");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroOrden")
                        .HasColumnType("int");

                    b.Property<int>("PlanEstudioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MateriaId");

                    b.HasIndex(new[] { "PlanEstudioId", "MateriaId" }, "MateriaEnPlanEstudio_UQ")
                        .IsUnique();

                    b.ToTable("MateriasEnPlanEstudio");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asistencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("CursadoMateriaId")
                        .HasColumnType("int");

                    b.Property<int>("EvaluacionId")
                        .HasColumnType("int");

                    b.Property<int>("ValorNota")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CursadoMateriaId" }, "NotasDeAlumnoEnMateriaIDX");

                    b.HasIndex(new[] { "EvaluacionId" }, "NotasDeEvaluacionIDX");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Domicilio")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex(new[] { "Apellido", "Nombre" }, "Apellido-NombreIDX");

                    b.HasIndex(new[] { "Nombre", "Apellido" }, "Nombre-ApellidoIDX");

                    b.HasIndex(new[] { "Documento", "TipoDocumentoId" }, "PersonaUnica_UQ")
                        .IsUnique();

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.PlanEstudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anno")
                        .HasColumnType("int");

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoPlan")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CarreraId", "Anno" }, "PlanEstudio_UQ")
                        .IsUnique();

                    b.HasIndex(new[] { "CarreraId" }, "PlanesDeUnaCarreraIDX");

                    b.ToTable("PlanesEstudio");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Codigo" }, "TDocumentoUnico_UQ")
                        .IsUnique();

                    b.ToTable("TiposDocumento");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnnoCicloLectivo")
                        .HasColumnType("int");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("MateriaEnPlanEstudioId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfesorId")
                        .HasColumnType("int");

                    b.Property<string>("Sede")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("ProfesorId");

                    b.HasIndex(new[] { "MateriaEnPlanEstudioId", "Sede", "Horario", "AnnoCicloLectivo" }, "InscripcionCarrera_UQ")
                        .IsUnique();

                    b.HasIndex(new[] { "MateriaEnPlanEstudioId", "ProfesorId" }, "MateriasQueDaUnProfeIDX");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Alumno", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.CUPOF_Coordinador", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebITSC.DB.Data.Entity.Coordinador", "Coordinador")
                        .WithMany()
                        .HasForeignKey("CoordinadorId");

                    b.Navigation("Carrera");

                    b.Navigation("Coordinador");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.CUPOF_Profesor", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.CertificadoAlumno", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Alumno", "Alumno")
                        .WithMany("CertificadosAlumno")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alumno");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Clase", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Turno", "Turno")
                        .WithMany("Clases")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.ClaseAsistencia", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Clase", "Clase")
                        .WithMany()
                        .HasForeignKey("ClaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebITSC.DB.Data.Entity.CursadoMateria", "CursadoMateria")
                        .WithMany("ClaseAsistencias")
                        .HasForeignKey("CursadoMateriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Clase");

                    b.Navigation("CursadoMateria");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Coordinador", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebITSC.DB.Data.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Correlatividad", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.MateriaEnPlanEstudio", "MateriaCorrelativa")
                        .WithMany()
                        .HasForeignKey("MateriaCorrelativaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebITSC.DB.Data.Entity.MateriaEnPlanEstudio", "MateriaEnPlanEstudio")
                        .WithMany()
                        .HasForeignKey("MateriaEnPlanEstudioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MateriaCorrelativa");

                    b.Navigation("MateriaEnPlanEstudio");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.CursadoMateria", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Alumno", "Alumno")
                        .WithMany("MateriasCursadas")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebITSC.DB.Data.Entity.Turno", "Turno")
                        .WithMany("AlumnosCursando")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Evaluacion", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.InscripcionCarrera", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Alumno", "Alumno")
                        .WithMany("InscripcionesCarreras")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebITSC.DB.Data.Entity.Carrera", "Carrera")
                        .WithMany("InscripcionesCarrera")
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.MAB", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.CUPOF_Profesor", "CUPOF_Profesor")
                        .WithMany()
                        .HasForeignKey("CUPOF_ProfesorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebITSC.DB.Data.Entity.Profesor", "Profesor")
                        .WithMany()
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CUPOF_Profesor");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.MateriaEnPlanEstudio", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebITSC.DB.Data.Entity.PlanEstudio", "PlanEstudio")
                        .WithMany()
                        .HasForeignKey("PlanEstudioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Materia");

                    b.Navigation("PlanEstudio");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Nota", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.CursadoMateria", "CursadoMateria")
                        .WithMany("Notas")
                        .HasForeignKey("CursadoMateriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebITSC.DB.Data.Entity.Evaluacion", "Evaluacion")
                        .WithMany("Notas")
                        .HasForeignKey("EvaluacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CursadoMateria");

                    b.Navigation("Evaluacion");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Persona", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.PlanEstudio", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Profesor", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Turno", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.MateriaEnPlanEstudio", "MateriaEnPlanEstudio")
                        .WithMany()
                        .HasForeignKey("MateriaEnPlanEstudioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebITSC.DB.Data.Entity.Profesor", "Profesor")
                        .WithMany()
                        .HasForeignKey("ProfesorId");

                    b.Navigation("MateriaEnPlanEstudio");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Usuario", b =>
                {
                    b.HasOne("WebITSC.DB.Data.Entity.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Alumno", b =>
                {
                    b.Navigation("CertificadosAlumno");

                    b.Navigation("InscripcionesCarreras");

                    b.Navigation("MateriasCursadas");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Carrera", b =>
                {
                    b.Navigation("InscripcionesCarrera");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.CursadoMateria", b =>
                {
                    b.Navigation("ClaseAsistencias");

                    b.Navigation("Notas");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Evaluacion", b =>
                {
                    b.Navigation("Notas");
                });

            modelBuilder.Entity("WebITSC.DB.Data.Entity.Turno", b =>
                {
                    b.Navigation("AlumnosCursando");

                    b.Navigation("Clases");
                });
#pragma warning restore 612, 618
        }
    }
}
